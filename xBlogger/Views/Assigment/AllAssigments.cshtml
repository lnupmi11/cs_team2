@model xBlogger.Extensions.PaginatedList<Assigment>

@{
    ViewData["Title"] = "AllAssigments";
    ViewData.AddActivePage(UserProfileMenuNavPages.AllAssigments);
    string role = null;
    if (User.IsInRole(Roles.Blogger.ToString()))
    {
        role = Roles.Blogger.ToString();
    }
    else if (User.IsInRole(Roles.Client.ToString()))
    {
        role = Roles.Client.ToString();
    }
}

<h2>Assigments</h2>

<div class="row">
    <div class="col-sm-3">
        <!--left col-->
        <ul class="list-group">
            <li class="list-group-item text-muted" contenteditable="false">Filters</li>
            <li class="list-group-item text-left">
                <a asp-action="AllAssigments" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(model => model.FirstOrDefault().MaxBudget)</a>
            </li>
            <li class="list-group-item text-left">
                <a asp-action="AllAssigments" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(model => model.FirstOrDefault().Deadline)</a>
            </li>
            <li class="list-group-item text-left">
                <form asp-action="AllAssigments" method="get">
                    <div class="form-group">
                        <label for="inputdefault">Find by description</label>
                        <input type="text" class="form-control" name="SearchString" value="@ViewData["currentFilter"]" />
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Search" class="btn btn-default" /> |
                        <a asp-action="AllAssigments">Back to Full List</a>
                    </div>
                </form>
            </li>
        </ul>
    </div>

    <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
        @if (Model.Count == 0)
        {
            <h1>Sorry, no Assigments with that description:</h1>
            <h2><i>@ViewData["CurrentFilter"]</i></h2>
        }
        @foreach (var item in Model)
        {
            var logoPath = "/images/";

            switch (item.Network)
            {
                case SocialNetworks.YouTube:
                    logoPath += "youtube.png";
                    break;
                case SocialNetworks.Instagram:
                    logoPath += "instagram.png";
                    break;
                case SocialNetworks.Facebook:
                    logoPath += "facebook.png";
                    break;
                case SocialNetworks.Telegram:
                    logoPath += "telegram.png";
                    break;
            }
            <div class="well well-sm card bg-light-aqua">
                <div class="card-title text-muted">
                    <img src=@logoPath
                         alt="icon" class="img-responsive pull-left"
                         style="max-height: 25px; max-width: 25px; margin:0 1%;">
                    <ul class="list-inline" style="margin-top:1%;">
                        <li>@item.Network</li>
                        <li>@item.Type</li>
                        <li>Deadline: @item.Deadline</li>
                    </ul>
                    <hr />
                </div>

                <div class="card-body">
                    <h3 class="card-title">@item.ShortDescription</h3>
                    <p class="card-text">@item.DetailedDescription</p>
                    <h4>$@item.MaxBudget</h4>

                    @if (User.IsInRole(Roles.Blogger.ToString()))
                    {
                        <hr />
                        var data = new Dictionary<string, string> { { "id", item.AssigmentId }, { "role", role } };
                        <ul class="list-inline">
                            <li><a asp-controller="Deal" asp-action="AddDeal" asp-all-route-data="@data" class="btn btn-success">Offer personal site</a></li>
                            <li><a asp-controller="Deal" asp-action="Details" asp-route-id="@item.AssigmentId" class="btn btn-primary">Details</a></li>
                        </ul>
                    }
                </div>

            </div>
        }
    </div>
</div>
<br /><br />
<div class="center-block text-center">
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="AllAssigments"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="AllAssigments"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Next
    </a>
</div>